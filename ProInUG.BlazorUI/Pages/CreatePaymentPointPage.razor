@page "/create-point"
@using ProInUG.BlazorUI.Models

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-16">
    <div style="max-width: 300px;">
        <EditForm Model="@paymentPoint" OnValidSubmit="@(()=>OnSubmitAsync(paymentPoint))">
            <DataAnnotationsValidator />
            <MudCard>
                <MudCardHeader>
                    <MudText Typo="Typo.h5">Create Payment Point</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <!-- device url -->
                    <MudTextField Label="Device Url" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="paymentPoint.DeviceUri" For="(() => paymentPoint.DeviceUri)" />
                    <!-- is enabled -->
                    <MudCheckBox @bind-Checked="@paymentPoint.IsEnable" Label="Enable"></MudCheckBox>
                    <!-- payment address -->
                    <MudTextField Label="Payment address" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="paymentPoint.PaymentAddress" For="(() => paymentPoint.PaymentAddress)" />
                    <!-- payment address -->
                    <MudTextField Label="Operator name" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="paymentPoint.OperatorName" For="(() => paymentPoint.OperatorName)" />
                    <!-- payment address -->
                    <MudTextField Label="Nomenclature name" Required="true" Variant="Variant.Outlined" Margin="Margin.Dense"
                                  @bind-Value="paymentPoint.NomenclatureName" For="(() => paymentPoint.NomenclatureName)" />
                    <!-- taxation type -->
                    <MudSelect T="@TaxationType" Variant="Variant.Outlined" Margin="Margin.Dense"
                               @bind-Value="paymentPoint.TaxationType">
                        @foreach (var value in Enum.GetValues<TaxationType>())
                        {
                            <MudSelectItem Value="@value" />
                        }
                    </MudSelect>
                    <!-- taxation type -->
                    <MudSelect T="@TaxRate" Variant="Variant.Outlined" Margin="Margin.Dense"
                               @bind-Value="paymentPoint.TaxRate">
                        @foreach (var value in Enum.GetValues<TaxRate>())
                        {
                            <MudSelectItem Value="@value" />
                        }
                    </MudSelect>
                </MudCardContent>
                <MudCardActions>
                    <!-- cancel -->
                    <MudButton ButtonType="ButtonType.Button" Variant="Variant.Text" Color="Color.Error" Class="ml-auto" 
                               @onclick="GoBack">Cancel</MudButton>
                    <!-- submit -->
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Dark" Class="ml-1"
                               Disabled="@isSubmitButtonDisabled">Create</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </div>
</MudContainer>

@*<div class="container" style="max-width: 1200px;">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <h3 class="text-center text-dark mt-5">Create new payment point</h3>
            <div class="card">
                <EditForm Model="paymentPoint" OnValidSubmit="@(() => OnSubmitAsync(paymentPoint))"
                          class="card-body">
                    <DataAnnotationsValidator />
                    <div class="mb-3">
                        <InputText id="device-uri" class="form-control" placeholder="Device url"
                                   @bind-Value="paymentPoint.DeviceUri" />
                        <ValidationMessage For="@(() => paymentPoint.DeviceUri)" />
                    </div>
                    <div class="mb-3">
                        <InputText id="payment-address" class="form-control" placeholder="Payment address"
                                   @bind-Value="paymentPoint.PaymentAddress" />
                        <ValidationMessage For="@(() => paymentPoint.PaymentAddress)" />
                    </div>
                    <div class="mb-3">
                        <InputText id="operator-name" class="form-control" placeholder="Operator name"
                                   @bind-Value="paymentPoint.OperatorName" />
                        <ValidationMessage For="@(() => paymentPoint.OperatorName)" />
                    </div>
                    <div class="mb-3">
                        <InputText id="nomenclature-name" class="form-control" placeholder="Nomenclature name"
                                   @bind-Value="paymentPoint.NomenclatureName" />
                        <ValidationMessage For="@(() => paymentPoint.NomenclatureName)" />
                    </div>
                    <div class="text-center">
                        <input type="submit" value="Submit" class="btn btn-primary px-5 mb-5 w-100"
                               disabled="@isSubmitButtonDisabled" />
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>*@
